From 0fa8c6e4ad864892849fa436bafafd088387e1d1 Mon Sep 17 00:00:00 2001
From: Paolo Sabatino <paolo.sabatino@gmail.com>
Date: Sun, 29 Jan 2023 13:43:27 +0000
Subject: [PATCH 07/18] fix spreadtrum (sprd) bluetooth broken park link status

---
 drivers/bluetooth/hci_ldisc.c | 6 ++++++
 include/net/bluetooth/hci.h   | 6 ++++++
 net/bluetooth/hci_sync.c      | 2 +-
 3 files changed, 13 insertions(+), 1 deletion(-)

diff --git a/drivers/bluetooth/hci_ldisc.c b/drivers/bluetooth/hci_ldisc.c
index 2f322f890b81..45011e248d76 100644
--- a/drivers/bluetooth/hci_ldisc.c
+++ b/drivers/bluetooth/hci_ldisc.c
@@ -666,6 +666,12 @@ static int hci_uart_register_dev(struct hci_uart *hu)
 	hdev->setup = hci_uart_setup;
 	SET_HCIDEV_DEV(hdev, hu->tty->dev);
 
+	// Set the broken Park link status quirk, specific for spreadtrum (sprd)
+	// bluetooth devices
+	if (hdev->manufacturer == 0xffff && hu->tty->driver &&
+		strncmp(hu->tty->driver->name, "ttyBT", 5) == 0)
+		set_bit(HCI_QUIRK_BROKEN_PARK_LINK_STATUS, &hdev->quirks);
+
 	if (test_bit(HCI_UART_RAW_DEVICE, &hu->hdev_flags))
 		set_bit(HCI_QUIRK_RAW_DEVICE, &hdev->quirks);
 
diff --git a/include/net/bluetooth/hci.h b/include/net/bluetooth/hci.h
index 71d243287640..9db585a6f410 100644
--- a/include/net/bluetooth/hci.h
+++ b/include/net/bluetooth/hci.h
@@ -71,6 +71,12 @@
 
 /* HCI device quirks */
 enum {
+	/*
+	 * Device declares that support Park link status, but it really
+	 * does not support it and fails to initialize
+	 */
+	HCI_QUIRK_BROKEN_PARK_LINK_STATUS,
+
 	/* When this quirk is set, the HCI Reset command is send when
 	 * closing the transport instead of when opening it.
 	 *
diff --git a/net/bluetooth/hci_sync.c b/net/bluetooth/hci_sync.c
index cb4d47ae129e..6410bd44435d 100644
--- a/net/bluetooth/hci_sync.c
+++ b/net/bluetooth/hci_sync.c
@@ -4121,7 +4121,7 @@ static int hci_setup_link_policy_sync(struct hci_dev *hdev)
 		link_policy |= HCI_LP_HOLD;
 	if (lmp_sniff_capable(hdev))
 		link_policy |= HCI_LP_SNIFF;
-	if (lmp_park_capable(hdev))
+	if (lmp_park_capable(hdev) && !test_bit(HCI_QUIRK_BROKEN_PARK_LINK_STATUS, &hdev->quirks))
 		link_policy |= HCI_LP_PARK;
 
 	cp.policy = cpu_to_le16(link_policy);
-- 
2.49.0

